{{- $oadbAdminPw := .Values.global.oadbAdminPassword | default (randAlphaNum 30) }}
{{- $oadbWalletPw := .Values.global.oadbWalletPassword | default (randAlphaNum 12) }}
{{- $oadbName := .Values.global.oadbName | default (printf "mushop%s" (randAlphaNum 12)) }}
{{- $oadbUser := .Values.global.oadbUser | default (printf "user%s" (randAlphaNum 12)) }}
{{- $oadbPw := .Values.global.oadbPassword | default (printf "%s%s" (randAlpha 1) (randAlphaNum 12)) }}

{{/* If we need to create a global ATP instance to be used by other services */}}
{{ if .Values.global.osb.atp }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Values.global.osb.instanceName }}-oadb-admin
  labels:
{{ include "provision.labels" . | indent 4 }}
type: Opaque
data:
  oadb_admin_pw: {{ $oadbAdminPw | b64enc }}
  oadb_admin_pw_osb: {{ printf `{"password":"%s"}` $oadbAdminPw | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Values.global.osb.instanceName }}-oadb-connection
  labels:
{{ include "provision.labels" . | indent 4 }}
type: Opaque
data:
{{- $dbName := $oadbName | trunc 14 }}
  oadb_db: {{ $dbName | b64enc }}
  oadb_db_osb: {{ printf `{"dbName":"%s"}` $dbName | b64enc }}
  oadb_service: {{ printf "%s_tp" $dbName | lower | b64enc }}
  oadb_wallet_pw: {{ $oadbWalletPw | b64enc }}
  oadb_wallet_pw_osb: {{ printf `{"walletPassword":"%s"}` $oadbWalletPw | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Values.global.osb.instanceName }}-oadb-credentials
  labels:
{{ include "provision.labels" . | indent 4 }}
type: Opaque
data:
  oadb_user: {{ $oadbUser | b64enc }}
  oadb_pw: {{ $oadbPw | b64enc }}
{{- end }}

{{/* If streaming is used generated stream info should be in a secret for use by osb AND the app (topic) */}}
{{ if .Values.global.osb.oss }}
{{- $streamName := .Values.global.ossStreamName | default (printf "%s%s" .Values.global.osb.instanceName (randAlphaNum 12)) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Values.global.osb.instanceName }}-oss-stream
  labels:
{{ include "provision.labels" . | indent 4 }}
type: Opaque
data:
  streamName: {{ $streamName | b64enc }}
  streamNameParam: {{ printf `{"name":"%s"}` $streamName | b64enc }}
{{- end }}